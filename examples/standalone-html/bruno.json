{
  "name": "E-commerce API",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "Cart",
      "filename": "Cart",
      "seq": 4,
      "root": {
        "docs": "Shopping cart endpoints",
        "meta": {
          "name": "Cart",
          "seq": 4
        }
      },
      "items": [
        {
          "type": "http",
          "name": "Add Item to Cart",
          "filename": "Add Item to Cart.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/cart/add/item/:itemId",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "itemId",
                "value": "cd3ad475-0784-4a0d-9fe4-a9a17e5391d9",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{ \n  \"quantity\": 2\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Add a product to the user's shopping cart",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Clear Cart",
          "filename": "Clear Cart.bru",
          "seq": 5,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/cart",
            "method": "DELETE",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Remove all items from the user's cart",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Get User Cart",
          "filename": "Get User Cart.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/cart",
            "method": "GET",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve the current user's shopping cart",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Remove Item from Cart",
          "filename": "Remove Item from Cart.bru",
          "seq": 4,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/cart/item/:itemId",
            "method": "DELETE",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "itemId",
                "value": "cd3ad475-0784-4a0d-9fe4-a9a17e5391d9",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Remove a specific item from the cart",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Update Cart Item",
          "filename": "Update Cart Item.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/cart/item/:itemId",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "itemId",
                "value": "cd3ad475-0784-4a0d-9fe4-a9a17e5391d9",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"quantity\": 5\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Update the quantity of an item in the cart",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Authentication",
      "filename": "Authentication",
      "seq": 2,
      "root": {
        "docs": "User authentication endpoints",
        "meta": {
          "name": "Authentication",
          "seq": 2
        }
      },
      "items": [
        {
          "type": "http",
          "name": "Register User",
          "filename": "Register User.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/auth/register",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"name\": \"Anoop\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Register a new user account",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Whoami",
          "filename": "Whoami.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/auth/whoami",
            "method": "GET",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve authenticated user's profile information",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Login",
          "filename": "Login.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/auth/login",
            "method": "POST",
            "headers": [],
            "params": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {
              "res": "bru.setEnvVar(\"accessToken\", res.body.token)"
            },
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Authenticate a user and receive a token",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Orders",
      "filename": "Orders",
      "seq": 5,
      "root": {
        "docs": "Order management endpoints",
        "meta": {
          "name": "Orders",
          "seq": 5
        }
      },
      "items": [
        {
          "type": "http",
          "name": "Create Order",
          "filename": "Create Order.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/orders",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"shippingAddress\": \"Mars\"\n}",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "// Check if the request was successful\nif (res.getStatus() === 200 || res.getStatus() === 201) {\n    // Parse the response body\n    var jsonData = res.getBody();\n    \n    // Check if the order has an ID\n    if (jsonData && jsonData.id) {\n        // Store the order ID in the environment\n        bru.setEnvVar('order_id', jsonData.id);\n        console.log('Order ID saved to environment: ' + jsonData.id);\n    }\n}",
            "docs": "Create a new order using the items in the user's cart",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Get User Orders",
          "filename": "Get User Orders.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/orders",
            "method": "GET",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve a list of all orders placed by the current user",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Get Order by ID",
          "filename": "Get Order by ID.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/orders/:orderId",
            "method": "GET",
            "headers": [
              {
                "name": "Authorization",
                "value": "Bearer {{accessToken}}",
                "enabled": true
              }
            ],
            "params": [
              {
                "name": "orderId",
                "value": "9c4d1e4f-64dd-465a-b52a-5471caab828b",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve detailed information about a specific order",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Products",
      "filename": "Products",
      "seq": 3,
      "root": {
        "docs": "Product-related endpoints. The server automatically seeds 5 sample products on startup if no products exist.",
        "meta": {
          "name": "Products",
          "seq": 3
        }
      },
      "items": [
        {
          "type": "http",
          "name": "Get Products by Category",
          "filename": "Get Products by Category.bru",
          "seq": 2,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/products?category=Electronics",
            "method": "GET",
            "headers": [],
            "params": [
              {
                "name": "category",
                "value": "Electronics",
                "type": "query",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve products filtered by category. Seeded categories include: Electronics, Sports, and Home.",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Get Product by ID",
          "filename": "Get Product by ID.bru",
          "seq": 3,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/products/:productId",
            "method": "GET",
            "headers": [],
            "params": [
              {
                "name": "productId",
                "value": "cd3ad475-0784-4a0d-9fe4-a9a17e5391d9",
                "type": "path",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve detailed information about a specific product",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Get All Products",
          "filename": "Get All Products.bru",
          "seq": 1,
          "settings": {},
          "tags": [],
          "request": {
            "url": "{{baseUrl}}/products",
            "method": "GET",
            "headers": [],
            "params": [
              {
                "name": "category",
                "value": "electronics",
                "type": "query",
                "enabled": false
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": [],
              "file": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "docs": "Retrieve a list of all products, optionally filtered by category. Default seeded categories include: Electronics, Sports, and Home.",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    }
  ],
  "activeEnvironmentUid": "RcGeNRbYHRYrqqtGIxs7V",
  "environments": [
    {
      "variables": [
        {
          "name": "baseUrl",
          "value": "http://localhost:3001/api",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "userToken",
          "value": "ZjFhZDJhMDItNmQ3Yi00OTg2LWFhZjYtODJkZGE1M2UyYTJh",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "accessToken",
          "value": "ZjFhZDJhMDItNmQ3Yi00OTg2LWFhZjYtODJkZGE1M2UyYTJh",
          "secret": false,
          "enabled": true,
          "type": "text"
        },
        {
          "name": "order_id",
          "value": "9c4d1e4f-64dd-465a-b52a-5471caab828b",
          "secret": false,
          "enabled": true,
          "type": "text"
        }
      ],
      "name": "dev"
    }
  ],
  "root": {
    "request": {
      "auth": {
        "mode": "none"
      }
    },
    "docs": "Collection for testing the E-commerce API endpoints. The server automatically seeds 5 sample products (Smartphone X, Running Shoes, Coffee Maker, Laptop Pro, Wireless Earbuds) on startup if no products exist in the database.\n\n[<img src=\"https://fetch.usebruno.com/button.svg\" alt=\"Fetch in Bruno\" style=\"width: 130px; height: 30px;\" width=\"128\" height=\"32\">](https://fetch.usebruno.com?url=git%40bitbucket.org%3Ausebruno%2Fdemo-api-collection.git \"target=_blank rel=noopener noreferrer\")",
    "meta": {
      "name": "E-commerce API"
    }
  },
  "brunoConfig": {
    "version": "1",
    "name": "E-commerce API",
    "type": "collection",
    "ignore": [
      "node_modules",
      ".git"
    ],
    "size": 0.005391120910644531,
    "filesCount": 23
  }
}